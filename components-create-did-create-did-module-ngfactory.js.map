{"version":3,"sources":["webpack:///./node_modules/angular-highlight-js/dist/esm/src/highlightJs.directive.js","webpack:///./node_modules/angular-highlight-js/dist/esm/src/highlightJs.module.js","webpack:///./node_modules/angular-highlight-js/dist/esm/src/highlightJs.token.js","webpack:///./node_modules/highlight.js/lib/highlight.js","webpack:///./node_modules/highlight.js/lib/languages/json.js","webpack:///./src/app/components/create-did/authentication-keys/authentication-keys.component.html","webpack:///./src/app/components/create-did/authentication-keys/authentication-keys.component.ts","webpack:///./src/app/components/create-did/create-did.module.ts","webpack:///./src/app/components/create-did/create-did.routing.ts","webpack:///./src/app/components/create-did/encrypt-keys/encrypt-keys.component.html","webpack:///./src/app/components/create-did/encrypt-keys/encrypt-keys.component.ts","webpack:///./src/app/components/create-did/public-keys/public-keys.component.html","webpack:///./src/app/components/create-did/public-keys/public-keys.component.ts","webpack:///./src/app/components/create-did/services/services.component.html","webpack:///./src/app/components/create-did/services/services.component.ts","webpack:///./src/app/components/create-did/summary/summary.component.html","webpack:///./src/app/components/create-did/summary/summary.component.ts","webpack:///./src/app/core/enums/shared-routes.ts","webpack:///./src/app/core/models/component-key.model.ts","webpack:///./src/app/core/models/component-service.model.ts","webpack:///./src/app/core/models/service.model.ts","webpack:///./src/app/core/utils/customValidators.ts","webpack:///./src/app/core/utils/tooltip.messages.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAyD;AACN;AACnD;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,uDAAuD;AACvD,SAAS,gCAAgC,OAAO,oDAAM,SAAS,+DAAY,IAAI,IAAI;AACnF,MAAM;AACN;AACA,oBAAoB,OAAO,mDAAK,EAAE;AAClC,sBAAsB,OAAO,mDAAK,EAAE;AACpC;AACA;AACA,CAAC;AAC+B;AAChC,iD;;;;;;;;;;;;AC9BA;AAAA;AAAA;AAAA;AAAyC;AACsB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB,mCAAmC,2EAAoB;AACvD,8BAA8B,2EAAoB;AAClD,iBAAiB,IAAI;AACrB;AACA;AACA,oDAAoD,WAAW;AAC/D;AACA,CAAC;AAC4B;AAC7B,8C;;;;;;;;;;;;ACtBA;AAAA;AAAA;AAA+C;AACxC,uBAAuB,4DAAc;AAC5C,6C;;;;;;;;;;;ACFA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK,IAA8B;AACnC;AACA,GAAG,MAAM,EAWN;;AAEH,CAAC;AACD;AACA;AACA;;AAEA;AACA,oBAAoB;AACpB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA,qCAAqC,sBAAsB,sBAAsB;AACjF;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,wCAAwC,YAAY;AACpD;;AAEA;AACA;AACA;AACA;AACA;;AAEA,4BAA4B;AAC5B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;AACA,uCAAuC,OAAO;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,4BAA4B,qEAAqE;AACjG;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,OAAO;AACP;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,8BAA8B,eAAe;AAC7C,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,oBAAoB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA,gDAAgD;AAChD;AACA,SAAS;AACT;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,yCAAyC,sBAAsB;;AAE/D;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,wFAAwF,uBAAuB;AAC/G;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,2DAA2D;AAC3D;;AAEA;AACA;;AAEA,gDAAgD,YAAY;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,iCAAiC,SAAS,YAAY;AACtD;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,2BAA2B;AAC3B;AACA,sBAAsB,sBAAsB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,gBAAgB,4BAA4B;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,4CAA4C,uBAAuB;AACnE;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,8FAA8F;AAC9F,yCAAyC;AACzC,gFAAgF,sDAAsD;;AAEtI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;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","file":"components-create-did-create-did-module-ngfactory.js","sourcesContent":["import { Directive, Input, Inject } from '@angular/core';\nimport { HIGHLIGHT_JS } from './highlightJs.token';\nvar HighlightJsDirective = (function () {\n    function HighlightJsDirective(hljs) {\n        this.hljs = hljs;\n    } //tslint:disable-line\n    HighlightJsDirective.prototype.ngOnChanges = function (changes) {\n        if ((changes['source'] || changes['language']) && this.language && this.source) {\n            this.highlightedCode = this.hljs.highlight(this.language, this.source).value;\n        }\n    };\n    HighlightJsDirective.decorators = [\n        { type: Directive, args: [{\n                    selector: '[mwlHighlightJs]',\n                    host: {\n                        '[innerHTML]': 'highlightedCode'\n                    }\n                },] },\n    ];\n    /** @nocollapse */\n    HighlightJsDirective.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: Inject, args: [HIGHLIGHT_JS,] },] },\n    ]; };\n    HighlightJsDirective.propDecorators = {\n        'source': [{ type: Input },],\n        'language': [{ type: Input },],\n    };\n    return HighlightJsDirective;\n}());\nexport { HighlightJsDirective };\n//# sourceMappingURL=highlightJs.directive.js.map","import { NgModule } from '@angular/core';\nimport { HighlightJsDirective } from './highlightJs.directive';\nvar HighlightJsModule = (function () {\n    function HighlightJsModule() {\n    }\n    HighlightJsModule.forRoot = function (hljs) {\n        return {\n            ngModule: HighlightJsModule,\n            providers: [hljs]\n        };\n    };\n    HighlightJsModule.decorators = [\n        { type: NgModule, args: [{\n                    declarations: [HighlightJsDirective],\n                    exports: [HighlightJsDirective]\n                },] },\n    ];\n    /** @nocollapse */\n    HighlightJsModule.ctorParameters = function () { return []; };\n    return HighlightJsModule;\n}());\nexport { HighlightJsModule };\n//# sourceMappingURL=highlightJs.module.js.map","import { InjectionToken } from '@angular/core';\nexport var HIGHLIGHT_JS = new InjectionToken('highlight.js');\n//# sourceMappingURL=highlightJs.token.js.map","/*\nSyntax highlighting with language autodetection.\nhttps://highlightjs.org/\n*/\n\n(function(factory) {\n\n  // Find the global object for export to both the browser and web workers.\n  var globalObject = typeof window === 'object' && window ||\n                     typeof self === 'object' && self;\n\n  // Setup highlight.js for different environments. First is Node.js or\n  // CommonJS.\n  if(typeof exports !== 'undefined') {\n    factory(exports);\n  } else if(globalObject) {\n    // Export hljs globally even when using AMD for cases when this script\n    // is loaded with others that may still expect a global hljs.\n    globalObject.hljs = factory({});\n\n    // Finally register the global hljs with AMD.\n    if(typeof define === 'function' && define.amd) {\n      define([], function() {\n        return globalObject.hljs;\n      });\n    }\n  }\n\n}(function(hljs) {\n  // Convenience variables for build-in objects\n  var ArrayProto = [],\n      objectKeys = Object.keys;\n\n  // Global internal variables used within the highlight.js library.\n  var languages = {},\n      aliases   = {};\n\n  // Regular expressions used throughout the highlight.js library.\n  var noHighlightRe    = /^(no-?highlight|plain|text)$/i,\n      languagePrefixRe = /\\blang(?:uage)?-([\\w-]+)\\b/i,\n      fixMarkupRe      = /((^(<[^>]+>|\\t|)+|(?:\\n)))/gm;\n\n  // The object will be assigned by the build tool. It used to synchronize API \n  // of external language files with minified version of the highlight.js library.\n  var API_REPLACES;\n\n  var spanEndTag = '</span>';\n\n  // Global options used when within external APIs. This is modified when\n  // calling the `hljs.configure` function.\n  var options = {\n    classPrefix: 'hljs-',\n    tabReplace: null,\n    useBR: false,\n    languages: undefined\n  };\n\n\n  /* Utility functions */\n\n  function escape(value) {\n    return value.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n  }\n\n  function tag(node) {\n    return node.nodeName.toLowerCase();\n  }\n\n  function testRe(re, lexeme) {\n    var match = re && re.exec(lexeme);\n    return match && match.index === 0;\n  }\n\n  function isNotHighlighted(language) {\n    return noHighlightRe.test(language);\n  }\n\n  function blockLanguage(block) {\n    var i, match, length, _class;\n    var classes = block.className + ' ';\n\n    classes += block.parentNode ? block.parentNode.className : '';\n\n    // language-* takes precedence over non-prefixed class names.\n    match = languagePrefixRe.exec(classes);\n    if (match) {\n      return getLanguage(match[1]) ? match[1] : 'no-highlight';\n    }\n\n    classes = classes.split(/\\s+/);\n\n    for (i = 0, length = classes.length; i < length; i++) {\n      _class = classes[i];\n\n      if (isNotHighlighted(_class) || getLanguage(_class)) {\n        return _class;\n      }\n    }\n  }\n\n  function inherit(parent) {  // inherit(parent, override_obj, override_obj, ...)\n    var key;\n    var result = {};\n    var objects = Array.prototype.slice.call(arguments, 1);\n\n    for (key in parent)\n      result[key] = parent[key];\n    objects.forEach(function(obj) {\n      for (key in obj)\n        result[key] = obj[key];\n    });\n    return result;\n  }\n\n  /* Stream merging */\n\n  function nodeStream(node) {\n    var result = [];\n    (function _nodeStream(node, offset) {\n      for (var child = node.firstChild; child; child = child.nextSibling) {\n        if (child.nodeType === 3)\n          offset += child.nodeValue.length;\n        else if (child.nodeType === 1) {\n          result.push({\n            event: 'start',\n            offset: offset,\n            node: child\n          });\n          offset = _nodeStream(child, offset);\n          // Prevent void elements from having an end tag that would actually\n          // double them in the output. There are more void elements in HTML\n          // but we list only those realistically expected in code display.\n          if (!tag(child).match(/br|hr|img|input/)) {\n            result.push({\n              event: 'stop',\n              offset: offset,\n              node: child\n            });\n          }\n        }\n      }\n      return offset;\n    })(node, 0);\n    return result;\n  }\n\n  function mergeStreams(original, highlighted, value) {\n    var processed = 0;\n    var result = '';\n    var nodeStack = [];\n\n    function selectStream() {\n      if (!original.length || !highlighted.length) {\n        return original.length ? original : highlighted;\n      }\n      if (original[0].offset !== highlighted[0].offset) {\n        return (original[0].offset < highlighted[0].offset) ? original : highlighted;\n      }\n\n      /*\n      To avoid starting the stream just before it should stop the order is\n      ensured that original always starts first and closes last:\n\n      if (event1 == 'start' && event2 == 'start')\n        return original;\n      if (event1 == 'start' && event2 == 'stop')\n        return highlighted;\n      if (event1 == 'stop' && event2 == 'start')\n        return original;\n      if (event1 == 'stop' && event2 == 'stop')\n        return highlighted;\n\n      ... which is collapsed to:\n      */\n      return highlighted[0].event === 'start' ? original : highlighted;\n    }\n\n    function open(node) {\n      function attr_str(a) {return ' ' + a.nodeName + '=\"' + escape(a.value).replace('\"', '&quot;') + '\"';}\n      result += '<' + tag(node) + ArrayProto.map.call(node.attributes, attr_str).join('') + '>';\n    }\n\n    function close(node) {\n      result += '</' + tag(node) + '>';\n    }\n\n    function render(event) {\n      (event.event === 'start' ? open : close)(event.node);\n    }\n\n    while (original.length || highlighted.length) {\n      var stream = selectStream();\n      result += escape(value.substring(processed, stream[0].offset));\n      processed = stream[0].offset;\n      if (stream === original) {\n        /*\n        On any opening or closing tag of the original markup we first close\n        the entire highlighted node stack, then render the original tag along\n        with all the following original tags at the same offset and then\n        reopen all the tags on the highlighted stack.\n        */\n        nodeStack.reverse().forEach(close);\n        do {\n          render(stream.splice(0, 1)[0]);\n          stream = selectStream();\n        } while (stream === original && stream.length && stream[0].offset === processed);\n        nodeStack.reverse().forEach(open);\n      } else {\n        if (stream[0].event === 'start') {\n          nodeStack.push(stream[0].node);\n        } else {\n          nodeStack.pop();\n        }\n        render(stream.splice(0, 1)[0]);\n      }\n    }\n    return result + escape(value.substr(processed));\n  }\n\n  /* Initialization */\n\n  function expand_mode(mode) {\n    if (mode.variants && !mode.cached_variants) {\n      mode.cached_variants = mode.variants.map(function(variant) {\n        return inherit(mode, {variants: null}, variant);\n      });\n    }\n    return mode.cached_variants || (mode.endsWithParent && [inherit(mode)]) || [mode];\n  }\n\n  function restoreLanguageApi(obj) {\n    if(API_REPLACES && !obj.langApiRestored) {\n      obj.langApiRestored = true;\n      for(var key in API_REPLACES)\n        obj[key] && (obj[API_REPLACES[key]] = obj[key]);\n      (obj.contains || []).concat(obj.variants || []).forEach(restoreLanguageApi);\n    }\n  }\n\n  function compileLanguage(language) {\n\n    function reStr(re) {\n        return (re && re.source) || re;\n    }\n\n    function langRe(value, global) {\n      return new RegExp(\n        reStr(value),\n        'm' + (language.case_insensitive ? 'i' : '') + (global ? 'g' : '')\n      );\n    }\n\n    // joinRe logically computes regexps.join(separator), but fixes the\n    // backreferences so they continue to match.\n    function joinRe(regexps, separator) {\n      // backreferenceRe matches an open parenthesis or backreference. To avoid\n      // an incorrect parse, it additionally matches the following:\n      // - [...] elements, where the meaning of parentheses and escapes change\n      // - other escape sequences, so we do not misparse escape sequences as\n      //   interesting elements\n      // - non-matching or lookahead parentheses, which do not capture. These\n      //   follow the '(' with a '?'.\n      var backreferenceRe = /\\[(?:[^\\\\\\]]|\\\\.)*\\]|\\(\\??|\\\\([1-9][0-9]*)|\\\\./;\n      var numCaptures = 0;\n      var ret = '';\n      for (var i = 0; i < regexps.length; i++) {\n        var offset = numCaptures;\n        var re = reStr(regexps[i]);\n        if (i > 0) {\n          ret += separator;\n        }\n        while (re.length > 0) {\n          var match = backreferenceRe.exec(re);\n          if (match == null) {\n            ret += re;\n            break;\n          }\n          ret += re.substring(0, match.index);\n          re = re.substring(match.index + match[0].length);\n          if (match[0][0] == '\\\\' && match[1]) {\n            // Adjust the backreference.\n            ret += '\\\\' + String(Number(match[1]) + offset);\n          } else {\n            ret += match[0];\n            if (match[0] == '(') {\n              numCaptures++;\n            }\n          }\n        }\n      }\n      return ret;\n    }\n\n    function compileMode(mode, parent) {\n      if (mode.compiled)\n        return;\n      mode.compiled = true;\n\n      mode.keywords = mode.keywords || mode.beginKeywords;\n      if (mode.keywords) {\n        var compiled_keywords = {};\n\n        var flatten = function(className, str) {\n          if (language.case_insensitive) {\n            str = str.toLowerCase();\n          }\n          str.split(' ').forEach(function(kw) {\n            var pair = kw.split('|');\n            compiled_keywords[pair[0]] = [className, pair[1] ? Number(pair[1]) : 1];\n          });\n        };\n\n        if (typeof mode.keywords === 'string') { // string\n          flatten('keyword', mode.keywords);\n        } else {\n          objectKeys(mode.keywords).forEach(function (className) {\n            flatten(className, mode.keywords[className]);\n          });\n        }\n        mode.keywords = compiled_keywords;\n      }\n      mode.lexemesRe = langRe(mode.lexemes || /\\w+/, true);\n\n      if (parent) {\n        if (mode.beginKeywords) {\n          mode.begin = '\\\\b(' + mode.beginKeywords.split(' ').join('|') + ')\\\\b';\n        }\n        if (!mode.begin)\n          mode.begin = /\\B|\\b/;\n        mode.beginRe = langRe(mode.begin);\n        if (mode.endSameAsBegin)\n          mode.end = mode.begin;\n        if (!mode.end && !mode.endsWithParent)\n          mode.end = /\\B|\\b/;\n        if (mode.end)\n          mode.endRe = langRe(mode.end);\n        mode.terminator_end = reStr(mode.end) || '';\n        if (mode.endsWithParent && parent.terminator_end)\n          mode.terminator_end += (mode.end ? '|' : '') + parent.terminator_end;\n      }\n      if (mode.illegal)\n        mode.illegalRe = langRe(mode.illegal);\n      if (mode.relevance == null)\n        mode.relevance = 1;\n      if (!mode.contains) {\n        mode.contains = [];\n      }\n      mode.contains = Array.prototype.concat.apply([], mode.contains.map(function(c) {\n        return expand_mode(c === 'self' ? mode : c);\n      }));\n      mode.contains.forEach(function(c) {compileMode(c, mode);});\n\n      if (mode.starts) {\n        compileMode(mode.starts, parent);\n      }\n\n      var terminators =\n        mode.contains.map(function(c) {\n          return c.beginKeywords ? '\\\\.?(?:' + c.begin + ')\\\\.?' : c.begin;\n        })\n        .concat([mode.terminator_end, mode.illegal])\n        .map(reStr)\n        .filter(Boolean);\n      mode.terminators = terminators.length ? langRe(joinRe(terminators, '|'), true) : {exec: function(/*s*/) {return null;}};\n    }\n    \n    compileMode(language);\n  }\n\n  /*\n  Core highlighting function. Accepts a language name, or an alias, and a\n  string with the code to highlight. Returns an object with the following\n  properties:\n\n  - relevance (int)\n  - value (an HTML string with highlighting markup)\n\n  */\n  function highlight(name, value, ignore_illegals, continuation) {\n\n    function escapeRe(value) {\n      return new RegExp(value.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&'), 'm');\n    }\n\n    function subMode(lexeme, mode) {\n      var i, length;\n\n      for (i = 0, length = mode.contains.length; i < length; i++) {\n        if (testRe(mode.contains[i].beginRe, lexeme)) {\n          if (mode.contains[i].endSameAsBegin) {\n            mode.contains[i].endRe = escapeRe( mode.contains[i].beginRe.exec(lexeme)[0] );\n          }\n          return mode.contains[i];\n        }\n      }\n    }\n\n    function endOfMode(mode, lexeme) {\n      if (testRe(mode.endRe, lexeme)) {\n        while (mode.endsParent && mode.parent) {\n          mode = mode.parent;\n        }\n        return mode;\n      }\n      if (mode.endsWithParent) {\n        return endOfMode(mode.parent, lexeme);\n      }\n    }\n\n    function isIllegal(lexeme, mode) {\n      return !ignore_illegals && testRe(mode.illegalRe, lexeme);\n    }\n\n    function keywordMatch(mode, match) {\n      var match_str = language.case_insensitive ? match[0].toLowerCase() : match[0];\n      return mode.keywords.hasOwnProperty(match_str) && mode.keywords[match_str];\n    }\n\n    function buildSpan(classname, insideSpan, leaveOpen, noPrefix) {\n      var classPrefix = noPrefix ? '' : options.classPrefix,\n          openSpan    = '<span class=\"' + classPrefix,\n          closeSpan   = leaveOpen ? '' : spanEndTag;\n\n      openSpan += classname + '\">';\n\n      return openSpan + insideSpan + closeSpan;\n    }\n\n    function processKeywords() {\n      var keyword_match, last_index, match, result;\n\n      if (!top.keywords)\n        return escape(mode_buffer);\n\n      result = '';\n      last_index = 0;\n      top.lexemesRe.lastIndex = 0;\n      match = top.lexemesRe.exec(mode_buffer);\n\n      while (match) {\n        result += escape(mode_buffer.substring(last_index, match.index));\n        keyword_match = keywordMatch(top, match);\n        if (keyword_match) {\n          relevance += keyword_match[1];\n          result += buildSpan(keyword_match[0], escape(match[0]));\n        } else {\n          result += escape(match[0]);\n        }\n        last_index = top.lexemesRe.lastIndex;\n        match = top.lexemesRe.exec(mode_buffer);\n      }\n      return result + escape(mode_buffer.substr(last_index));\n    }\n\n    function processSubLanguage() {\n      var explicit = typeof top.subLanguage === 'string';\n      if (explicit && !languages[top.subLanguage]) {\n        return escape(mode_buffer);\n      }\n\n      var result = explicit ?\n                   highlight(top.subLanguage, mode_buffer, true, continuations[top.subLanguage]) :\n                   highlightAuto(mode_buffer, top.subLanguage.length ? top.subLanguage : undefined);\n\n      // Counting embedded language score towards the host language may be disabled\n      // with zeroing the containing mode relevance. Usecase in point is Markdown that\n      // allows XML everywhere and makes every XML snippet to have a much larger Markdown\n      // score.\n      if (top.relevance > 0) {\n        relevance += result.relevance;\n      }\n      if (explicit) {\n        continuations[top.subLanguage] = result.top;\n      }\n      return buildSpan(result.language, result.value, false, true);\n    }\n\n    function processBuffer() {\n      result += (top.subLanguage != null ? processSubLanguage() : processKeywords());\n      mode_buffer = '';\n    }\n\n    function startNewMode(mode) {\n      result += mode.className? buildSpan(mode.className, '', true): '';\n      top = Object.create(mode, {parent: {value: top}});\n    }\n\n    function processLexeme(buffer, lexeme) {\n\n      mode_buffer += buffer;\n\n      if (lexeme == null) {\n        processBuffer();\n        return 0;\n      }\n\n      var new_mode = subMode(lexeme, top);\n      if (new_mode) {\n        if (new_mode.skip) {\n          mode_buffer += lexeme;\n        } else {\n          if (new_mode.excludeBegin) {\n            mode_buffer += lexeme;\n          }\n          processBuffer();\n          if (!new_mode.returnBegin && !new_mode.excludeBegin) {\n            mode_buffer = lexeme;\n          }\n        }\n        startNewMode(new_mode, lexeme);\n        return new_mode.returnBegin ? 0 : lexeme.length;\n      }\n\n      var end_mode = endOfMode(top, lexeme);\n      if (end_mode) {\n        var origin = top;\n        if (origin.skip) {\n          mode_buffer += lexeme;\n        } else {\n          if (!(origin.returnEnd || origin.excludeEnd)) {\n            mode_buffer += lexeme;\n          }\n          processBuffer();\n          if (origin.excludeEnd) {\n            mode_buffer = lexeme;\n          }\n        }\n        do {\n          if (top.className) {\n            result += spanEndTag;\n          }\n          if (!top.skip && !top.subLanguage) {\n            relevance += top.relevance;\n          }\n          top = top.parent;\n        } while (top !== end_mode.parent);\n        if (end_mode.starts) {\n          if (end_mode.endSameAsBegin) {\n            end_mode.starts.endRe = end_mode.endRe;\n          }\n          startNewMode(end_mode.starts, '');\n        }\n        return origin.returnEnd ? 0 : lexeme.length;\n      }\n\n      if (isIllegal(lexeme, top))\n        throw new Error('Illegal lexeme \"' + lexeme + '\" for mode \"' + (top.className || '<unnamed>') + '\"');\n\n      /*\n      Parser should not reach this point as all types of lexemes should be caught\n      earlier, but if it does due to some bug make sure it advances at least one\n      character forward to prevent infinite looping.\n      */\n      mode_buffer += lexeme;\n      return lexeme.length || 1;\n    }\n\n    var language = getLanguage(name);\n    if (!language) {\n      throw new Error('Unknown language: \"' + name + '\"');\n    }\n\n    compileLanguage(language);\n    var top = continuation || language;\n    var continuations = {}; // keep continuations for sub-languages\n    var result = '', current;\n    for(current = top; current !== language; current = current.parent) {\n      if (current.className) {\n        result = buildSpan(current.className, '', true) + result;\n      }\n    }\n    var mode_buffer = '';\n    var relevance = 0;\n    try {\n      var match, count, index = 0;\n      while (true) {\n        top.terminators.lastIndex = index;\n        match = top.terminators.exec(value);\n        if (!match)\n          break;\n        count = processLexeme(value.substring(index, match.index), match[0]);\n        index = match.index + count;\n      }\n      processLexeme(value.substr(index));\n      for(current = top; current.parent; current = current.parent) { // close dangling modes\n        if (current.className) {\n          result += spanEndTag;\n        }\n      }\n      return {\n        relevance: relevance,\n        value: result,\n        language: name,\n        top: top\n      };\n    } catch (e) {\n      if (e.message && e.message.indexOf('Illegal') !== -1) {\n        return {\n          relevance: 0,\n          value: escape(value)\n        };\n      } else {\n        throw e;\n      }\n    }\n  }\n\n  /*\n  Highlighting with language detection. Accepts a string with the code to\n  highlight. Returns an object with the following properties:\n\n  - language (detected language)\n  - relevance (int)\n  - value (an HTML string with highlighting markup)\n  - second_best (object with the same structure for second-best heuristically\n    detected language, may be absent)\n\n  */\n  function highlightAuto(text, languageSubset) {\n    languageSubset = languageSubset || options.languages || objectKeys(languages);\n    var result = {\n      relevance: 0,\n      value: escape(text)\n    };\n    var second_best = result;\n    languageSubset.filter(getLanguage).filter(autoDetection).forEach(function(name) {\n      var current = highlight(name, text, false);\n      current.language = name;\n      if (current.relevance > second_best.relevance) {\n        second_best = current;\n      }\n      if (current.relevance > result.relevance) {\n        second_best = result;\n        result = current;\n      }\n    });\n    if (second_best.language) {\n      result.second_best = second_best;\n    }\n    return result;\n  }\n\n  /*\n  Post-processing of the highlighted markup:\n\n  - replace TABs with something more useful\n  - replace real line-breaks with '<br>' for non-pre containers\n\n  */\n  function fixMarkup(value) {\n    return !(options.tabReplace || options.useBR)\n      ? value\n      : value.replace(fixMarkupRe, function(match, p1) {\n          if (options.useBR && match === '\\n') {\n            return '<br>';\n          } else if (options.tabReplace) {\n            return p1.replace(/\\t/g, options.tabReplace);\n          }\n          return '';\n      });\n  }\n\n  function buildClassName(prevClassName, currentLang, resultLang) {\n    var language = currentLang ? aliases[currentLang] : resultLang,\n        result   = [prevClassName.trim()];\n\n    if (!prevClassName.match(/\\bhljs\\b/)) {\n      result.push('hljs');\n    }\n\n    if (prevClassName.indexOf(language) === -1) {\n      result.push(language);\n    }\n\n    return result.join(' ').trim();\n  }\n\n  /*\n  Applies highlighting to a DOM node containing code. Accepts a DOM node and\n  two optional parameters for fixMarkup.\n  */\n  function highlightBlock(block) {\n    var node, originalStream, result, resultNode, text;\n    var language = blockLanguage(block);\n\n    if (isNotHighlighted(language))\n        return;\n\n    if (options.useBR) {\n      node = document.createElementNS('http://www.w3.org/1999/xhtml', 'div');\n      node.innerHTML = block.innerHTML.replace(/\\n/g, '').replace(/<br[ \\/]*>/g, '\\n');\n    } else {\n      node = block;\n    }\n    text = node.textContent;\n    result = language ? highlight(language, text, true) : highlightAuto(text);\n\n    originalStream = nodeStream(node);\n    if (originalStream.length) {\n      resultNode = document.createElementNS('http://www.w3.org/1999/xhtml', 'div');\n      resultNode.innerHTML = result.value;\n      result.value = mergeStreams(originalStream, nodeStream(resultNode), text);\n    }\n    result.value = fixMarkup(result.value);\n\n    block.innerHTML = result.value;\n    block.className = buildClassName(block.className, language, result.language);\n    block.result = {\n      language: result.language,\n      re: result.relevance\n    };\n    if (result.second_best) {\n      block.second_best = {\n        language: result.second_best.language,\n        re: result.second_best.relevance\n      };\n    }\n  }\n\n  /*\n  Updates highlight.js global options with values passed in the form of an object.\n  */\n  function configure(user_options) {\n    options = inherit(options, user_options);\n  }\n\n  /*\n  Applies highlighting to all <pre><code>..</code></pre> blocks on a page.\n  */\n  function initHighlighting() {\n    if (initHighlighting.called)\n      return;\n    initHighlighting.called = true;\n\n    var blocks = document.querySelectorAll('pre code');\n    ArrayProto.forEach.call(blocks, highlightBlock);\n  }\n\n  /*\n  Attaches highlighting to the page load event.\n  */\n  function initHighlightingOnLoad() {\n    addEventListener('DOMContentLoaded', initHighlighting, false);\n    addEventListener('load', initHighlighting, false);\n  }\n\n  function registerLanguage(name, language) {\n    var lang = languages[name] = language(hljs);\n    restoreLanguageApi(lang);\n    if (lang.aliases) {\n      lang.aliases.forEach(function(alias) {aliases[alias] = name;});\n    }\n  }\n\n  function listLanguages() {\n    return objectKeys(languages);\n  }\n\n  function getLanguage(name) {\n    name = (name || '').toLowerCase();\n    return languages[name] || languages[aliases[name]];\n  }\n\n  function autoDetection(name) {\n    var lang = getLanguage(name);\n    return lang && !lang.disableAutodetect;\n  }\n\n  /* Interface definition */\n\n  hljs.highlight = highlight;\n  hljs.highlightAuto = highlightAuto;\n  hljs.fixMarkup = fixMarkup;\n  hljs.highlightBlock = highlightBlock;\n  hljs.configure = configure;\n  hljs.initHighlighting = initHighlighting;\n  hljs.initHighlightingOnLoad = initHighlightingOnLoad;\n  hljs.registerLanguage = registerLanguage;\n  hljs.listLanguages = listLanguages;\n  hljs.getLanguage = getLanguage;\n  hljs.autoDetection = autoDetection;\n  hljs.inherit = inherit;\n\n  // Common regexps\n  hljs.IDENT_RE = '[a-zA-Z]\\\\w*';\n  hljs.UNDERSCORE_IDENT_RE = '[a-zA-Z_]\\\\w*';\n  hljs.NUMBER_RE = '\\\\b\\\\d+(\\\\.\\\\d+)?';\n  hljs.C_NUMBER_RE = '(-?)(\\\\b0[xX][a-fA-F0-9]+|(\\\\b\\\\d+(\\\\.\\\\d*)?|\\\\.\\\\d+)([eE][-+]?\\\\d+)?)'; // 0x..., 0..., decimal, float\n  hljs.BINARY_NUMBER_RE = '\\\\b(0b[01]+)'; // 0b...\n  hljs.RE_STARTERS_RE = '!|!=|!==|%|%=|&|&&|&=|\\\\*|\\\\*=|\\\\+|\\\\+=|,|-|-=|/=|/|:|;|<<|<<=|<=|<|===|==|=|>>>=|>>=|>=|>>>|>>|>|\\\\?|\\\\[|\\\\{|\\\\(|\\\\^|\\\\^=|\\\\||\\\\|=|\\\\|\\\\||~';\n\n  // Common modes\n  hljs.BACKSLASH_ESCAPE = {\n    begin: '\\\\\\\\[\\\\s\\\\S]', relevance: 0\n  };\n  hljs.APOS_STRING_MODE = {\n    className: 'string',\n    begin: '\\'', end: '\\'',\n    illegal: '\\\\n',\n    contains: [hljs.BACKSLASH_ESCAPE]\n  };\n  hljs.QUOTE_STRING_MODE = {\n    className: 'string',\n    begin: '\"', end: '\"',\n    illegal: '\\\\n',\n    contains: [hljs.BACKSLASH_ESCAPE]\n  };\n  hljs.PHRASAL_WORDS_MODE = {\n    begin: /\\b(a|an|the|are|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|simply|enough|gonna|going|wtf|so|such|will|you|your|they|like|more)\\b/\n  };\n  hljs.COMMENT = function (begin, end, inherits) {\n    var mode = hljs.inherit(\n      {\n        className: 'comment',\n        begin: begin, end: end,\n        contains: []\n      },\n      inherits || {}\n    );\n    mode.contains.push(hljs.PHRASAL_WORDS_MODE);\n    mode.contains.push({\n      className: 'doctag',\n      begin: '(?:TODO|FIXME|NOTE|BUG|XXX):',\n      relevance: 0\n    });\n    return mode;\n  };\n  hljs.C_LINE_COMMENT_MODE = hljs.COMMENT('//', '$');\n  hljs.C_BLOCK_COMMENT_MODE = hljs.COMMENT('/\\\\*', '\\\\*/');\n  hljs.HASH_COMMENT_MODE = hljs.COMMENT('#', '$');\n  hljs.NUMBER_MODE = {\n    className: 'number',\n    begin: hljs.NUMBER_RE,\n    relevance: 0\n  };\n  hljs.C_NUMBER_MODE = {\n    className: 'number',\n    begin: hljs.C_NUMBER_RE,\n    relevance: 0\n  };\n  hljs.BINARY_NUMBER_MODE = {\n    className: 'number',\n    begin: hljs.BINARY_NUMBER_RE,\n    relevance: 0\n  };\n  hljs.CSS_NUMBER_MODE = {\n    className: 'number',\n    begin: hljs.NUMBER_RE + '(' +\n      '%|em|ex|ch|rem'  +\n      '|vw|vh|vmin|vmax' +\n      '|cm|mm|in|pt|pc|px' +\n      '|deg|grad|rad|turn' +\n      '|s|ms' +\n      '|Hz|kHz' +\n      '|dpi|dpcm|dppx' +\n      ')?',\n    relevance: 0\n  };\n  hljs.REGEXP_MODE = {\n    className: 'regexp',\n    begin: /\\//, end: /\\/[gimuy]*/,\n    illegal: /\\n/,\n    contains: [\n      hljs.BACKSLASH_ESCAPE,\n      {\n        begin: /\\[/, end: /\\]/,\n        relevance: 0,\n        contains: [hljs.BACKSLASH_ESCAPE]\n      }\n    ]\n  };\n  hljs.TITLE_MODE = {\n    className: 'title',\n    begin: hljs.IDENT_RE,\n    relevance: 0\n  };\n  hljs.UNDERSCORE_TITLE_MODE = {\n    className: 'title',\n    begin: hljs.UNDERSCORE_IDENT_RE,\n    relevance: 0\n  };\n  hljs.METHOD_GUARD = {\n    // excludes method names from keyword processing\n    begin: '\\\\.\\\\s*' + hljs.UNDERSCORE_IDENT_RE,\n    relevance: 0\n  };\n\n  return hljs;\n}));\n","module.exports = function(hljs) {\n  var LITERALS = {literal: 'true false null'};\n  var TYPES = [\n    hljs.QUOTE_STRING_MODE,\n    hljs.C_NUMBER_MODE\n  ];\n  var VALUE_CONTAINER = {\n    end: ',', endsWithParent: true, excludeEnd: true,\n    contains: TYPES,\n    keywords: LITERALS\n  };\n  var OBJECT = {\n    begin: '{', end: '}',\n    contains: [\n      {\n        className: 'attr',\n        begin: /\"/, end: /\"/,\n        contains: [hljs.BACKSLASH_ESCAPE],\n        illegal: '\\\\n',\n      },\n      hljs.inherit(VALUE_CONTAINER, {begin: /:/})\n    ],\n    illegal: '\\\\S'\n  };\n  var ARRAY = {\n    begin: '\\\\[', end: '\\\\]',\n    contains: [hljs.inherit(VALUE_CONTAINER)], // inherit is a workaround for a bug that makes shared modes with endsWithParent compile only the ending of one of the parents\n    illegal: '\\\\S'\n  };\n  TYPES.splice(TYPES.length, 0, OBJECT, ARRAY);\n  return {\n    contains: TYPES,\n    keywords: LITERALS,\n    illegal: '\\\\S'\n  };\n};","<div class=\"tab-pane fade in active\">\r\n  <h4 class=\"head text-center\">Create authentication keys</h4>\r\n  <br/>\r\n  <div class=\"row\">\r\n    <div class=\"col-xs-offset-1 col-xs-10 col-sm-offset-3 col-sm-6\">\r\n      <fieldset class=\"collapsible collapsed mb-5\" *ngFor=\"let key of authenticationKeys\">\r\n        <legend (click)=\"collapse.toggle(); toggleKey(key.keyModel);\">\r\n          {{key.keyModel.alias}}\r\n          <i class=\"fas fa-caret-{{key.iconPosition}} ml-2\"></i>\r\n          <button class=\"btn btn-sm btn-danger pull-right\" (click)=\"removeKey(key.keyModel)\">\r\n            <span class=\"glyphicon glyphicon-remove\"></span>\r\n          </button>\r\n        </legend>\r\n        <div mdbCollapse #collapse=\"bs-collapse\">\r\n          <div class=\"form-group\">\r\n            <label class=\"control-label\" for=\"type\">Key type</label>\r\n            <input type=\"text\" class=\"form-control input-md\" id=\"type\" value=\"{{key.keyModel.type}}\" disabled />\r\n          </div>\r\n    \r\n          <div class=\"form-group\">\r\n            <label class=\"control-label\" for=\"controller\">Key controller</label>\r\n            <input type=\"text\" class=\"form-control input-md\" id=\"controller\" value=\"{{key.keyModel.controller}}\" disabled />\r\n          </div>\r\n  \r\n          <div class=\"form-group\">\r\n            <label class=\"control-label\" for=\"alias\">Alias</label>\r\n            <input type=\"text\" class=\"form-control input-md\" id=\"alias\" value=\"{{key.keyModel.alias}}\" disabled />\r\n          </div>\r\n  \r\n          <div class=\"form-group\">\r\n            <label class=\"control-label\" for=\"controller\">Key (Base58)</label>\r\n            <input type=\"text\" class=\"form-control input-md\" id=\"controller\" value=\"{{key.keyModel.publicKey}}\" disabled />\r\n          </div>\r\n        </div>\r\n      </fieldset>\r\n      <div class=\"mb-4\">\r\n        <label class=\"control-label\" for=\"action\">\r\n          Select or generate key\r\n          <i class=\"fas fa-info-circle fa-lg ml-4\" ngbTooltip=\"{{actionDropdownTooltipMessage}}\" tooltipClass=\"custom-tooltip\"></i>\r\n        </label>\r\n        <select class=\"form-control\" id=\"action\" (change)=\"changeAction($event)\">\r\n          <option value=\"generate\">Generate New Key</option>\r\n          <option value=\"{{key.keyModel.publicKey}}\" *ngFor=\"let key of availablePublicKeys\">{{key.keyModel.alias}}</option>\r\n        </select>\r\n      </div>\r\n      <fieldset class=\"collapsible collapsed\" *ngIf=\"selectedKey\">\r\n        <legend (click)=\"collapse.toggle()\">{{selectedKey.alias}}</legend>\r\n        <div mdbCollapse #collapse=\"bs-collapse\">\r\n          <div class=\"form-group\">\r\n            <label class=\"control-label\" for=\"type\">Signature type</label>\r\n            <input type=\"text\" class=\"form-control input-md\" id=\"type\" value=\"{{selectedKey.type}}\" disabled />\r\n          </div>\r\n    \r\n          <div class=\"form-group\">\r\n            <label class=\"control-label\" for=\"controller\">Key controller</label>\r\n            <input type=\"text\" class=\"form-control input-md\" id=\"controller\" value=\"{{selectedKey.controller}}\" disabled />\r\n          </div>\r\n  \r\n          <div class=\"form-group\">\r\n            <label class=\"control-label\" for=\"alias\">Alias</label>\r\n            <input type=\"text\" class=\"form-control input-md\" id=\"alias\" value=\"{{selectedKey.alias}}\" disabled />\r\n          </div>\r\n  \r\n          <div class=\"form-group\">\r\n            <label class=\"control-label\" for=\"controller\">Key (Base58)</label>\r\n            <input type=\"text\" class=\"form-control input-md\" id=\"controller\" value=\"{{selectedKey.publicKey}}\" disabled />\r\n          </div>\r\n\r\n          <div class=\"form-group text-center\">\r\n            <button type=\"button\" mdbBtn color=\"success\" mdbWavesEffect (click)=addSelectedKey()>Add Key</button>\r\n          </div>\r\n        </div>\r\n      </fieldset>\r\n      <fieldset class=\"collapsible collapsed\" *ngIf=\"selectedAction === 'generate'\">\r\n        <legend (click)=\"collapse.toggle()\">Generate Public Key</legend>\r\n        <div mdbCollapse #collapse=\"bs-collapse\">\r\n          <form [formGroup]=\"keyForm\" (ngSubmit)=\"generateKey()\">\r\n            <div class=\"form-group\">\r\n              <label class=\"control-label\" for=\"type\">Signature type</label>\r\n              <select class=\"form-control\" formControlName=\"type\" id=\"type\">\r\n                <option value=\"Ed25519\">Ed25519</option>\r\n                <option value=\"ECDSASecp256k1\">ECDSASecp256k1</option>\r\n              </select>\r\n            </div>\r\n  \r\n            <div class=\"form-group\">\r\n              <label class=\"control-label\" for=\"controller\">Key controller</label>\r\n              <input \r\n                type=\"text\" \r\n                class=\"form-control input-md\" \r\n                formControlName=\"controller\" \r\n                id=\"controller\" \r\n                placeholder=\"Key controller\"\r\n                pattern=\"^did:fctr:[abcdef0-9]{64}$\"\r\n                [ngClass]=\"{ 'is-invalid': controller.touched && controller.errors }\" />\r\n              <div *ngIf=\"controller.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"controller['errors'].required\">Key controller is required!</div>\r\n                <div *ngIf=\"controller['errors'].pattern\">Key controller must be a valid DID!</div>\r\n              </div>\r\n            </div>\r\n  \r\n            <div class=\"form-group\">\r\n              <label class=\"control-label\" for=\"alias\">Alias</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control input-md\"\r\n                formControlName=\"alias\" id=\"alias\"\r\n                placeholder=\"Alias\"\r\n                pattern=\"^[a-z0-9-]{1,32}$\"\r\n                [ngClass]=\"{ 'is-invalid': alias.touched && alias.errors }\" />\r\n              <div *ngIf=\"alias.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"alias['errors'].required\">Alias is required!</div>\r\n                <div *ngIf=\"alias['errors'].pattern\">Alias must not be more than 32 characters long and must contain only lower-case letters, digits and hyphens!</div>\r\n                <div *ngIf=\"alias['errors'].taken\">You have already used this alias!</div>\r\n              </div>\r\n            </div>\r\n  \r\n            <div class=\"form-group text-center\">\r\n              <input type=\"submit\" mdbBtn color=\"success\" mdbWavesEffect value=\"Generate key\" [disabled]=\"keyForm.invalid\" />\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </fieldset>\r\n      <div class=\"row justify-content-between mt-4\">\r\n        <button class=\"btn-md-blue\" mdbBtn type=\"button\" color=\"primary\" mdbWavesEffect (click)=\"goToPrevious()\"> <span class=\"glyphicon glyphicon-arrow-left mr-3\"></span> Back</button>\r\n        <button class=\"btn-md-blue\" mdbBtn type=\"button\" color=\"primary\" mdbWavesEffect (click)=\"goToNext()\"> {{continueButtonText}} <span class=\"glyphicon glyphicon-arrow-right ml-3\"></span></button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { CollapseComponent } from 'angular-bootstrap-md';\nimport { Component, OnInit, AfterViewInit, ViewChildren, NgZone } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Store, select } from '@ngrx/store';\nimport { Subscription } from 'rxjs';\n\nimport { AddAuthenticationKey, RemoveAuthenticationKey } from 'src/app/core/store/form/form.actions';\nimport { AppState } from 'src/app/core/store/app.state';\nimport { BaseComponent } from 'src/app/components/base.component';\nimport { MoveToStep } from 'src/app/core/store/action/action.actions';\nimport { ComponentKeyModel } from 'src/app/core/models/component-key.model';\nimport { CreateRoutes } from 'src/app/core/enums/create-routes';\nimport { CreateAdvancedStepsIndexes } from 'src/app/core/enums/create-advanced-steps-indexes';\nimport CustomValidators from 'src/app/core/utils/customValidators';\nimport { DIDService } from 'src/app/core/services/did.service';\nimport { KeyModel } from 'src/app/core/models/key.model';\nimport { KeysService } from 'src/app/core/services/keys.service';\nimport { SignatureType } from 'src/app/core/enums/signature-type';\nimport { TooltipMessages } from 'src/app/core/utils/tooltip.messages';\n\nconst GENERATE_ACTION = 'generate';\nconst UP_POSITION = 'up';\nconst DOWN_POSITION = 'down';\n\n@Component({\n  selector: 'app-authentication-keys',\n  templateUrl: './authentication-keys.component.html',\n  styleUrls: ['./authentication-keys.component.scss']\n})\nexport class AuthenticationKeysComponent extends BaseComponent implements OnInit, AfterViewInit {\n  @ViewChildren(CollapseComponent) collapses: CollapseComponent[];\n  private subscription$: Subscription;\n  private didId: string;\n  public keyForm: FormGroup;\n  public selectedAction = GENERATE_ACTION;\n  public selectedKey: KeyModel;\n  public authenticationKeys: ComponentKeyModel[] = [];\n  public availablePublicKeys: ComponentKeyModel[] = [];\n  public actionDropdownTooltipMessage = TooltipMessages.AuthenticationDropdownTooltip;\n  public continueButtonText: string;\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private zone: NgZone,\n    private store: Store<AppState>,\n    private keysService: KeysService,\n    private didService: DIDService) {\n    super();\n  }\n\n  ngOnInit() {\n    this.subscription$ = this.store\n      .pipe(select(state => state))\n      .subscribe(state => {\n        this.authenticationKeys = state.form.authenticationKeys\n          .map(key => new ComponentKeyModel(key, DOWN_POSITION));\n\n        this.availablePublicKeys = state.form.publicKeys\n          .filter(k => !state.form.authenticationKeys.includes(k))\n          .map(key => new ComponentKeyModel(key, DOWN_POSITION));\n\n        this.continueButtonText = this.authenticationKeys.length > 0 ? 'Next' : 'Skip';\n      });\n\n    this.subscriptions.push(this.subscription$);\n\n    this.didId = this.didService.getId();\n    this.createForm();\n  }\n\n  ngAfterViewInit() {\n    setTimeout(() => {\n      this.collapses.forEach((collapse: CollapseComponent, index) => {\n        if (index === this.collapses.length - 1) {\n          collapse.toggle();\n        }\n      });\n    });\n  }\n\n  createForm() {\n    this.keyForm = this.fb.group({\n      type: [SignatureType.EdDSA, [Validators.required]],\n      controller: [this.didId, [Validators.required]],\n      alias: ['', [\n        Validators.required,\n        CustomValidators.uniqueKeyAlias(\n          this.availablePublicKeys.map(key => key.keyModel),\n          this.authenticationKeys.map(key => key.keyModel)\n        )\n      ]]\n    });\n  }\n\n  generateKey() {\n    if (this.keyForm.invalid) {\n      return;\n    }\n\n    const keyPair = this.keysService.generateKeyPair(this.type.value);\n    const generatedKey = new KeyModel(\n      this.alias.value,\n      this.type.value,\n      this.controller.value,\n      keyPair.publicKey,\n      keyPair.privateKey\n    );\n\n    this.store.dispatch(new AddAuthenticationKey(generatedKey));\n    this.createForm();\n  }\n\n  changeAction(event) {\n    this.selectedAction = event.target.value;\n    if (this.selectedAction !== GENERATE_ACTION) {\n      this.selectedKey = this.availablePublicKeys.find(k => k.keyModel.publicKey === this.selectedAction).keyModel;\n    } else {\n      this.selectedKey = undefined;\n    }\n\n    setTimeout(() => {\n      this.collapses.forEach((collapse: CollapseComponent, index) => {\n        if (index === this.collapses.length - 1) {\n          this.zone.run(() => {\n            collapse.toggle();\n          });\n        }\n      });\n    });\n  }\n\n  addSelectedKey() {\n    this.store.dispatch(new AddAuthenticationKey(this.selectedKey));\n    this.selectedKey = undefined;\n    this.selectedAction = GENERATE_ACTION;\n\n    setTimeout(() => {\n      this.collapses.forEach((collapse: CollapseComponent, index) => {\n        if (index === this.collapses.length - 1) {\n          this.zone.run(() => {\n            collapse.toggle();\n          });\n        }\n      });\n    });\n  }\n\n  removeKey(key: KeyModel) {\n    this.store.dispatch(new RemoveAuthenticationKey(key));\n    this.createForm();\n  }\n\n  toggleKey(keyModel) {\n    const publicKey = this.authenticationKeys.find(k => k.keyModel === keyModel);\n    publicKey.iconPosition = publicKey.iconPosition === DOWN_POSITION ? UP_POSITION : DOWN_POSITION;\n  }\n\n  goToNext() {\n    this.store.dispatch(new MoveToStep(CreateAdvancedStepsIndexes.Services));\n    this.router.navigate([CreateRoutes.Services]);\n  }\n\n  goToPrevious() {\n    this.store.dispatch(new MoveToStep(CreateAdvancedStepsIndexes.PublicKeys));\n    this.router.navigate([CreateRoutes.PublicKeys]);\n  }\n\n  get type () {\n    return this.keyForm.get('type');\n  }\n\n  get alias () {\n    return this.keyForm.get('alias');\n  }\n\n  get controller () {\n    return this.keyForm.get('controller');\n  }\n}\n","import { CommonModule } from '@angular/common';\r\nimport { createComponents } from '.';\r\nimport { CreateDIDRoutingModule } from './create-did.routing';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HighlightJsModule, HIGHLIGHT_JS } from 'angular-highlight-js';\r\nimport hljs from 'highlight.js/lib/highlight';\r\nimport json from 'highlight.js/lib/languages/json';\r\nimport { MDBBootstrapModule } from 'angular-bootstrap-md';\r\nimport {NgbTooltipModule} from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgModule } from '@angular/core';\r\n\r\nhljs.registerLanguage('json', json);\r\n\r\nexport function highlightJsFactory() {\r\n  return hljs;\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ...createComponents\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    CreateDIDRoutingModule,\r\n    FormsModule,\r\n    HighlightJsModule.forRoot({\r\n      provide: HIGHLIGHT_JS,\r\n      useFactory: highlightJsFactory\r\n    }),\r\n    MDBBootstrapModule.forRoot(),\r\n    NgbTooltipModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  exports: [\r\n    ...createComponents\r\n  ]\r\n})\r\nexport class CreateDIDModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { AuthenticationKeysComponent } from './authentication-keys/authentication-keys.component';\r\nimport { CreateComponentsGuard } from '../../core/guards/create-components.guard';\r\nimport { EncryptKeysComponent } from './encrypt-keys/encrypt-keys.component';\r\nimport { PublicKeysComponent } from './public-keys/public-keys.component';\r\nimport { ServicesComponent } from './services/services.component';\r\nimport { SummaryComponent } from './summary/summary.component';\r\n\r\nconst didCreationRoutes: Routes = [\r\n  { path: 'keys/authentication', component: AuthenticationKeysComponent, canActivate: [ CreateComponentsGuard ] },\r\n  { path: 'keys/encrypt', component: EncryptKeysComponent, canActivate: [ CreateComponentsGuard ] },\r\n  { path: 'keys/public', component: PublicKeysComponent, canActivate: [ CreateComponentsGuard ] },\r\n  { path: 'services', component: ServicesComponent, canActivate: [ CreateComponentsGuard ] },\r\n  { path: 'summary', component: SummaryComponent, canActivate: [ CreateComponentsGuard ] }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(didCreationRoutes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class CreateDIDRoutingModule { }\r\n","<div class=\"tab-pane fade in active\">\r\n  <h4 class=\"head text-center\">\r\n    Encrypt your keys\r\n    <ng-template #tipContent>{{tooltipMessage}} <b>{{boldPartTooltipMessage}}</b></ng-template>\r\n    <i class=\"fas fa-info-circle fa-sm ml-4\" [ngbTooltip]=\"tipContent\" tooltipClass=\"custom-tooltip\"></i>\r\n  </h4>\r\n  <br/>\r\n  <div class=\"row\">\r\n    <div class=\"col-xs-offset-1 col-xs-10 col-sm-offset-3 col-sm-6\">\r\n      <div class=\"alert alert-info text-center\" role=\"alert\" *ngIf=\"!keysGenerated\">\r\n        <i class=\"fas fa-info mr-4\"></i>\r\n        You have not generated any keys.\r\n      </div>\r\n      <form [formGroup]=\"encryptForm\" (ngSubmit)=\"encryptKeys()\" *ngIf=\"keysGenerated\">\r\n        <div class=\"form-group\">\r\n          <label class=\"control-label\" for=\"password\">Enter password</label>\r\n          <input \r\n            type=\"password\" \r\n            class=\"form-control input-md\" \r\n            formControlName=\"password\" \r\n            id=\"password\" \r\n            placeholder=\"Password\"\r\n            pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[#$^+=!*()@%&]).{8,}$\"\r\n            [ngClass]=\"{ 'is-invalid': password.touched && password.errors }\" />\r\n          <div *ngIf=\"password.errors\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"password.errors.required\">Password is required!</div>\r\n            <div *ngIf=\"password.errors.pattern\">Password must be at least 8 characters long and must include at least one lower-case letter, one upper-case letter, one digit and one special character!</div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label class=\"control-label\" for=\"confirm-password\">Confirm password</label>\r\n          <input \r\n            type=\"password\" \r\n            class=\"form-control input-md\" \r\n            formControlName=\"confirmPassword\" \r\n            id=\"confirm-password\" \r\n            placeholder=\"Confirm Password\"\r\n            [ngClass]=\"{ 'is-invalid': confirmPassword.touched && (confirmPassword.errors || encryptForm.errors?.passwordsMismatch) }\" />\r\n          <div *ngIf=\"confirmPassword.errors || encryptForm.errors?.passwordsMismatch\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"confirmPassword.errors?.required\">Confirm password is required!</div>\r\n            <div *ngIf=\"encryptForm.errors?.passwordsMismatch\">Passwords do not match!</div>\r\n          </div>\r\n        </div>\r\n  \r\n        <div class=\"form-group text-center\">\r\n          <input type=\"submit\" mdbBtn color=\"success\" mdbWavesEffect value=\"Encrypt keys\" [disabled]=\"encryptForm.invalid\" />\r\n        </div>\r\n      </form>\r\n      <div *ngIf=\"encryptedFile\" class=\"mt-5 text-center\">\r\n        <p class=\"text-center text-warning\">Download your keystore file! You must download it to continue with the next step.</p>\r\n        <button mdbBtn type=\"button\" color=\"warning\" mdbWavesEffect class=\"mt-3\" (click)=\"downloadFile()\">Download File</button>\r\n      </div>\r\n      <div class=\"row justify-content-between mt-4\">\r\n        <button class=\"btn-md-blue\" mdbBtn type=\"button\" color=\"primary\" mdbWavesEffect (click)=\"goToPrevious()\"> <span class=\"glyphicon glyphicon-arrow-left mr-3\"></span> Back</button>\r\n        <button class=\"btn-md-blue\" mdbBtn type=\"button\" color=\"primary\" mdbWavesEffect (click)=\"goToNext()\" [disabled]=\"!fileDowloaded && keysGenerated\"> {{continueButtonText}} <span class=\"glyphicon glyphicon-arrow-right ml-3\"></span></button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Store, select } from '@ngrx/store';\n\nimport { ActionType } from 'src/app/core/enums/action-type';\nimport { AppState } from 'src/app/core/store/app.state';\nimport { BaseComponent } from '../../base.component';\nimport { CreateAdvancedStepsIndexes } from 'src/app/core/enums/create-advanced-steps-indexes';\nimport { CreateBasicStepsIndexes } from 'src/app/core/enums/create-basic-steps-indexes';\nimport { CreateRoutes } from 'src/app/core/enums/create-routes';\nimport CustomValidators from 'src/app/core/utils/customValidators';\nimport { KeysService } from 'src/app/core/services/keys.service';\nimport { MoveToStep } from 'src/app/core/store/action/action.actions';\nimport { SharedRoutes } from 'src/app/core/enums/shared-routes';\nimport { Subscription } from 'rxjs';\nimport { TooltipMessages } from 'src/app/core/utils/tooltip.messages';\nimport { WorkflowService } from 'src/app/core/services/workflow.service';\nimport { DIDService } from 'src/app/core/services/did.service';\n\n@Component({\n  selector: 'app-encrypt-keys',\n  templateUrl: './encrypt-keys.component.html',\n  styleUrls: ['./encrypt-keys.component.scss']\n})\nexport class EncryptKeysComponent extends BaseComponent implements OnInit {\n  private subscription$: Subscription;\n  public currentStepIndex = CreateAdvancedStepsIndexes.EncryptKeys;\n  public encryptForm;\n  public encryptedFile: string;\n  public fileDowloaded: boolean;\n  public keysGenerated: boolean;\n  public tooltipMessage: string;\n  public boldPartTooltipMessage: string;\n  public continueButtonText = 'Skip';\n\n  constructor(\n    private didService: DIDService,\n    private fb: FormBuilder,\n    private router: Router,\n    private store: Store<AppState>,\n    private keysService: KeysService,\n    private workflowService: WorkflowService) {\n    super();\n  }\n\n  ngOnInit() {\n    this.subscription$ = this.store\n     .pipe(select(state => state))\n     .subscribe(state => {\n        if (state.action.selectedAction === ActionType.CreateAdvanced) {\n          this.tooltipMessage = TooltipMessages.EncryptHeaderTooltipAdvancedMode;\n          this.boldPartTooltipMessage = TooltipMessages.EncryptHeaderBoldPartTooltipAdvancedMode;\n        } else if (state.action.selectedAction === ActionType.CreateBasic) {\n          this.tooltipMessage = TooltipMessages.EncryptHeaderTooltipBasicMode;\n          this.boldPartTooltipMessage = TooltipMessages.EncryptHeaderBoldPartTooltipBasicMode;\n        }\n\n        if (state.form.publicKeys.length > 0 || state.form.authenticationKeys.length > 0) {\n          this.keysGenerated = true;\n          this.continueButtonText = 'Next';\n        }\n     });\n\n    this.subscriptions.push(this.subscription$);\n\n    this.encryptForm = this.fb.group({\n      password: ['', [Validators.required]],\n      confirmPassword: ['', [Validators.required]]\n    }, { validator: CustomValidators.passwordsDoMatch.bind(this)});\n  }\n\n  encryptKeys() {\n    if (this.encryptForm.invalid) {\n      return;\n    }\n\n    this.keysService\n      .encryptKeys(this.password.value)\n      .subscribe(encryptedFile => {\n        const parsedFile = JSON.parse(encryptedFile);\n        parsedFile.encryptionAlgo = {\n          name: 'AES-GCM',\n          tagLength: 128\n        };\n        parsedFile.did = this.didService.getId();\n        this.encryptedFile = JSON.stringify(parsedFile, null, 2);\n        this.encryptForm.reset();\n      });\n  }\n\n  downloadFile() {\n    if (this.encryptedFile) {\n      const downloader = document.createElement('a');\n      document.body.appendChild(downloader);\n\n      const blob = new Blob([this.encryptedFile], { type: 'text/json' });\n      const url = window.URL;\n      const fileUrl = url.createObjectURL(blob);\n\n      downloader.setAttribute('href', fileUrl);\n      const date = new Date();\n      downloader.setAttribute('download', `paper-did-UTC--${date.toISOString()}.txt`);\n      downloader.click();\n\n      this.fileDowloaded = true;\n    }\n  }\n\n  goToNext() {\n    if (this.fileDowloaded || !this.keysGenerated) {\n      const selectedAction = this.workflowService.getSelectedAction();\n      if (selectedAction === ActionType.CreateAdvanced) {\n        this.store.dispatch(new MoveToStep(CreateAdvancedStepsIndexes.Summary));\n      } else if (selectedAction === ActionType.CreateBasic) {\n        this.store.dispatch(new MoveToStep(CreateBasicStepsIndexes.Summary));\n      }\n\n      this.router.navigate([CreateRoutes.Summary]);\n    }\n  }\n\n  goToPrevious() {\n    const selectedAction = this.workflowService.getSelectedAction();\n    if (selectedAction === ActionType.CreateAdvanced) {\n      this.store.dispatch(new MoveToStep(CreateAdvancedStepsIndexes.Services));\n      this.router.navigate([CreateRoutes.Services]);\n    } else if (selectedAction === ActionType.CreateBasic) {\n      this.router.navigate([SharedRoutes.Action]);\n    }\n  }\n\n  get password () {\n    return this.encryptForm.get('password');\n  }\n\n  get confirmPassword () {\n    return this.encryptForm.get('confirmPassword');\n  }\n}\n","<div class=\"tab-pane fade in active\">\r\n  <h4 class=\"head text-center\">Create public keys</h4>\r\n  <br/>\r\n  <div class=\"row\">\r\n    <div class=\"col-xs-offset-1 col-xs-10 col-sm-offset-3 col-sm-6\">\r\n      <fieldset class=\"collapsible collapsed mb-5\" *ngFor=\"let key of publicKeys\">\r\n        <legend (click)=\"collapse.toggle(); toggleKey(key.keyModel);\">\r\n          {{key.keyModel.alias}}\r\n          <i class=\"fas fa-caret-{{key.iconPosition}} ml-2\"></i>\r\n          <button class=\"btn btn-sm btn-danger pull-right\" (click)=\"removeKey(key.keyModel)\">\r\n            <span class=\"glyphicon glyphicon-remove\"></span>\r\n          </button>\r\n        </legend>\r\n        <div mdbCollapse #collapse=\"bs-collapse\">\r\n          <div class=\"form-group\">\r\n            <label class=\"control-label\" for=\"type\">Signature type</label>\r\n            <input type=\"text\" class=\"form-control input-md\" id=\"type\" value=\"{{key.keyModel.type}}\" disabled />\r\n          </div>\r\n  \r\n          <div class=\"form-group\">\r\n            <label class=\"control-label\" for=\"controller\">Key controller</label>\r\n            <input type=\"text\" class=\"form-control input-md\" id=\"controller\" value=\"{{key.keyModel.controller}}\" disabled />\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label class=\"control-label\" for=\"alias\">Alias</label>\r\n            <input type=\"text\" class=\"form-control input-md\" id=\"alias\" value=\"{{key.keyModel.alias}}\" disabled />\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label class=\"control-label\" for=\"controller\">Key (Base58)</label>\r\n            <input type=\"text\" class=\"form-control input-md\" id=\"controller\" value=\"{{key.keyModel.publicKey}}\" disabled />\r\n          </div>\r\n        </div>\r\n      </fieldset>\r\n      <fieldset class=\"collapsible collapsed\">\r\n        <legend (click)=\"collapse.toggle()\">Generate Public Key</legend>\r\n        <div mdbCollapse #collapse=\"bs-collapse\">\r\n          <form [formGroup]=\"keyForm\" (ngSubmit)=\"generateKey()\">\r\n            <div class=\"form-group\">\r\n              <label class=\"control-label\" for=\"type\">\r\n                Signature type\r\n                <i class=\"fas fa-info-circle fa-lg ml-4\" ngbTooltip=\"{{signatureTypeTooltipMessage}}\" tooltipClass=\"custom-tooltip\"></i>\r\n              </label>\r\n              <select class=\"form-control\" formControlName=\"type\" id=\"type\">\r\n                <option value=\"Ed25519\">Ed25519</option>\r\n                <option value=\"ECDSASecp256k1\">ECDSASecp256k1</option>\r\n              </select>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n              <label class=\"control-label\" for=\"controller\">\r\n                Key controller\r\n                <i class=\"fas fa-info-circle fa-lg ml-4\" ngbTooltip=\"{{controllerTooltipMessage}}\" tooltipClass=\"custom-tooltip\"></i>\r\n              </label>\r\n              <input \r\n                type=\"text\" \r\n                class=\"form-control input-md\" \r\n                formControlName=\"controller\" \r\n                id=\"controller\" \r\n                placeholder=\"Key controller\"\r\n                pattern=\"^did:fctr:[abcdef0-9]{64}$\"\r\n                [ngClass]=\"{ 'is-invalid': controller.touched && controller.errors }\" />\r\n              <div *ngIf=\"controller.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"controller['errors'].required\">Key controller is required!</div>\r\n                <div *ngIf=\"controller['errors'].pattern\">Key controller must be a valid DID!</div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n              <label class=\"control-label\" for=\"alias\">\r\n                Alias\r\n                <i class=\"fas fa-info-circle fa-lg ml-4\" ngbTooltip=\"{{aliasTooltipMessage}}\" tooltipClass=\"custom-tooltip\"></i>\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control input-md\"\r\n                formControlName=\"alias\" id=\"alias\"\r\n                placeholder=\"Alias\"\r\n                pattern=\"^[a-z0-9-]{1,32}$\"\r\n                [ngClass]=\"{ 'is-invalid': alias.touched && alias.errors }\" />\r\n              <div *ngIf=\"alias.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"alias['errors'].required\">Alias is required!</div>\r\n                <div *ngIf=\"alias['errors'].pattern\">Alias must not be more than 32 characters long and must contain only lower-case letters, digits and hyphens!</div>\r\n                <div *ngIf=\"alias['errors'].taken\">You have already used this alias!</div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"form-group text-center\">\r\n              <input type=\"submit\" mdbBtn color=\"success\" mdbWavesEffect value=\"Generate key\" [disabled]=\"keyForm.invalid\" />\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </fieldset>\r\n      <div class=\"row justify-content-between mt-4\">\r\n        <button class=\"btn-md-blue\" mdbBtn type=\"button\" color=\"primary\" mdbWavesEffect (click)=\"goToPrevious()\"> <span class=\"glyphicon glyphicon-arrow-left mr-3\"></span> Back</button>\r\n        <button class=\"btn-md-blue\" mdbBtn type=\"button\" color=\"primary\" mdbWavesEffect (click)=\"goToNext()\"> {{continueButtonText}} <span class=\"glyphicon glyphicon-arrow-right ml-3\"></span></button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { CollapseComponent } from 'angular-bootstrap-md';\nimport { Component, OnInit, AfterViewInit, ViewChildren, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Store, select } from '@ngrx/store';\nimport { Subscription } from 'rxjs';\n\nimport { AddPublicKey, RemovePublicKey } from 'src/app/core/store/form/form.actions';\nimport { AppState } from 'src/app/core/store/app.state';\nimport { BaseComponent } from 'src/app/components/base.component';\nimport { ComponentKeyModel } from 'src/app/core/models/component-key.model';\nimport { CreateRoutes } from 'src/app/core/enums/create-routes';\nimport { CreateAdvancedStepsIndexes } from 'src/app/core/enums/create-advanced-steps-indexes';\nimport CustomValidators from 'src/app/core/utils/customValidators';\nimport { DIDService } from 'src/app/core/services/did.service';\nimport { KeysService } from 'src/app/core/services/keys.service';\nimport { KeyModel } from 'src/app/core/models/key.model';\nimport { MoveToStep } from 'src/app/core/store/action/action.actions';\nimport { SharedRoutes } from 'src/app/core/enums/shared-routes';\nimport { SignatureType } from 'src/app/core/enums/signature-type';\nimport { TooltipMessages } from 'src/app/core/utils/tooltip.messages';\n\nconst UP_POSITION = 'up';\nconst DOWN_POSITION = 'down';\n\n@Component({\n  selector: 'app-public-keys',\n  templateUrl: './public-keys.component.html',\n  styleUrls: ['./public-keys.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class PublicKeysComponent extends BaseComponent implements OnInit, AfterViewInit {\n  @ViewChildren(CollapseComponent) collapses: CollapseComponent[];\n  private subscription$: Subscription;\n  private didId: string;\n  private authenticationKeys: KeyModel[] = [];\n  public publicKeys: ComponentKeyModel[] = [];\n  public keyForm: FormGroup;\n  public aliasTooltipMessage = TooltipMessages.AliasTooltip;\n  public controllerTooltipMessage = TooltipMessages.ControllerTooltip;\n  public signatureTypeTooltipMessage = TooltipMessages.SignatureTypeTooltip;\n  public continueButtonText: string;\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private store: Store<AppState>,\n    private keysService: KeysService,\n    private didService: DIDService) {\n    super();\n  }\n\n  ngOnInit() {\n    this.subscription$ = this.store\n     .pipe(select(state => state))\n     .subscribe(state => {\n        this.publicKeys = state.form.publicKeys.map(key => new ComponentKeyModel(key, DOWN_POSITION));\n        this.authenticationKeys = state.form.authenticationKeys;\n\n        this.continueButtonText = this.publicKeys.length > 0 ? 'Next' : 'Skip';\n     });\n\n    this.subscriptions.push(this.subscription$);\n\n    this.didId = this.didService.getId();\n    this.createForm();\n  }\n\n  ngAfterViewInit() {\n    setTimeout(() => {\n      this.collapses.forEach((collapse: CollapseComponent, index) => {\n        if (index === this.collapses.length - 1) {\n          collapse.toggle();\n        }\n      });\n    });\n  }\n\n  createForm() {\n    this.keyForm = this.fb.group({\n      type: [SignatureType.EdDSA, [Validators.required]],\n      controller: [this.didId, [Validators.required]],\n      alias: ['', [Validators.required, CustomValidators.uniqueKeyAlias(this.publicKeys.map(key => key.keyModel), this.authenticationKeys)]]\n    });\n  }\n\n  generateKey() {\n    if (this.keyForm.invalid) {\n      return;\n    }\n\n    const keyPair = this.keysService.generateKeyPair(this.type.value);\n    const generatedKey = new KeyModel(\n      this.alias.value,\n      this.type.value,\n      this.controller.value,\n      keyPair.publicKey,\n      keyPair.privateKey\n    );\n\n    this.store.dispatch(new AddPublicKey(generatedKey));\n    this.createForm();\n  }\n\n  removeKey(key: KeyModel) {\n    this.store.dispatch(new RemovePublicKey(key));\n    this.createForm();\n  }\n\n  toggleKey(keyModel) {\n    const publicKey = this.publicKeys.find(k => k.keyModel === keyModel);\n    publicKey.iconPosition = publicKey.iconPosition === DOWN_POSITION ? UP_POSITION : DOWN_POSITION;\n  }\n\n  goToNext() {\n    this.store.dispatch(new MoveToStep(CreateAdvancedStepsIndexes.AuthenticationKeys));\n    this.router.navigate([CreateRoutes.AuthenticationKeys]);\n  }\n\n  goToPrevious() {\n    this.router.navigate([SharedRoutes.Action]);\n  }\n\n  get type () {\n    return this.keyForm.get('type');\n  }\n\n  get alias () {\n    return this.keyForm.get('alias');\n  }\n\n  get controller () {\n    return this.keyForm.get('controller');\n  }\n}\n","<div class=\"tab-pane fade in active\">\r\n  <h4 class=\"head text-center\">\r\n    Add services\r\n    <ng-template #tipContent>{{headerTooltipMessage}} <b>{{headerBoldPartTooltipMessage}}</b></ng-template>\r\n    <i class=\"fas fa-info-circle fa-sm ml-4\" [ngbTooltip]=\"tipContent\" tooltipClass=\"custom-tooltip\"></i>\r\n  </h4>\r\n  <br/>\r\n  <div class=\"row\">\r\n    <div class=\"col-xs-offset-1 col-xs-10 col-sm-offset-3 col-sm-6\">\r\n      <fieldset class=\"collapsible collapsed mb-5\" *ngFor=\"let service of services\">\r\n        <legend (click)=\"collapse.toggle(); toggleService(service.serviceModel);\">\r\n          {{service.serviceModel.alias}}\r\n          <i class=\"fas fa-caret-{{service.iconPosition}} ml-2\"></i>\r\n          <button class=\"btn btn-sm btn-danger pull-right\" (click)=\"removeService(service.serviceModel)\">\r\n            <span class=\"glyphicon glyphicon-remove\"></span>\r\n          </button>\r\n        </legend>\r\n        <div mdbCollapse #collapse=\"bs-collapse\">\r\n          <div class=\"form-group\">\r\n            <label class=\"control-label\" for=\"type\">Service type</label>\r\n            <input type=\"text\" class=\"form-control input-md\" id=\"type\" value=\"{{service.serviceModel.type}}\" disabled />\r\n          </div>\r\n  \r\n          <div class=\"form-group\">\r\n            <label class=\"control-label\" for=\"endpoint\">Service endpoint</label>\r\n            <input type=\"text\" class=\"form-control input-md\" id=\"endpoint\" value=\"{{service.serviceModel.endpoint}}\" disabled />\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label class=\"control-label\" for=\"alias\">Alias</label>\r\n            <input type=\"text\" class=\"form-control input-md\" id=\"alias\" value=\"{{service.serviceModel.alias}}\" disabled />\r\n          </div>\r\n        </div>\r\n      </fieldset>\r\n      <fieldset class=\"collapsible collapsed\">\r\n        <legend (click)=\"collapse.toggle()\">Add service</legend>\r\n        <div mdbCollapse #collapse=\"bs-collapse\">\r\n          <form [formGroup]=\"serviceForm\" (ngSubmit)=\"addService()\">\r\n\r\n            <div class=\"form-group\">\r\n              <label class=\"control-label\" for=\"type\">\r\n                Service type\r\n                <i class=\"fas fa-info-circle fa-lg ml-4\" ngbTooltip=\"{{typeTooltipMessage}}\" tooltipClass=\"custom-tooltip\"></i>\r\n              </label>\r\n              <input \r\n                type=\"text\" \r\n                class=\"form-control input-md\"\r\n                formControlName=\"type\"\r\n                id=\"type\"\r\n                placeholder=\"Service type\"\r\n                [ngClass]=\"{ 'is-invalid': type.touched && type.errors }\" />\r\n              <div *ngIf=\"type.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"type['errors'].required\">Service type is required!</div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n              <label class=\"control-label\" for=\"endpoint\">\r\n                Service endpoint\r\n                <i class=\"fas fa-info-circle fa-lg ml-4\" ngbTooltip=\"{{endpointTooltipMessage}}\" tooltipClass=\"custom-tooltip\"></i>\r\n              </label>\r\n              <input \r\n                type=\"text\" \r\n                class=\"form-control input-md\"\r\n                formControlName=\"endpoint\"\r\n                id=\"endpoint\"\r\n                placeholder=\"Service endpoint\"\r\n                pattern=\"^(http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?$\"\r\n                [ngClass]=\"{ 'is-invalid': endpoint.touched && endpoint.errors }\" />\r\n              <div *ngIf=\"endpoint.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"endpoint['errors'].required\">Service endpoint is required!</div>\r\n                <div *ngIf=\"endpoint['errors'].pattern\">Service endpoint must be a valid URL address starting with http:// or https://</div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n              <label class=\"control-label\" for=\"alias\">Alias</label>\r\n              <input \r\n                type=\"text\"\r\n                class=\"form-control input-md\"\r\n                formControlName=\"alias\"\r\n                id=\"alias\"\r\n                placeholder=\"Alias\"\r\n                pattern=\"^[a-z0-9-]{1,32}$\"\r\n                [ngClass]=\"{ 'is-invalid': alias.touched && alias.errors }\" />\r\n              <div *ngIf=\"alias.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"alias['errors'].required\">Alias is required!</div>\r\n                <div *ngIf=\"alias['errors'].pattern\">Alias must not be more than 32 characters long and must contain only lower-case letters, digits and hyphens!</div>\r\n                <div *ngIf=\"alias['errors'].taken\">You have already used this alias!</div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"form-group text-center\">\r\n              <input type=\"submit\" mdbBtn color=\"success\" mdbWavesEffect value=\"Add service\" [disabled]=\"serviceForm.invalid\" />\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </fieldset>\r\n      <div class=\"row justify-content-between mt-4\">\r\n        <button class=\"btn-md-blue\" mdbBtn type=\"button\" color=\"primary\" mdbWavesEffect (click)=\"goToPrevious()\"> <span class=\"glyphicon glyphicon-arrow-left mr-3\"></span> Back</button>\r\n        <button class=\"btn-md-blue\" mdbBtn type=\"button\" color=\"primary\" mdbWavesEffect (click)=\"goToNext()\"> {{continueButtonText}} <span class=\"glyphicon glyphicon-arrow-right ml-3\"></span></button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { CollapseComponent } from 'angular-bootstrap-md';\nimport { Component, OnInit, AfterViewInit, ViewChildren } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Store, select } from '@ngrx/store';\n\nimport { AddService, RemoveService } from 'src/app/core/store/form/form.actions';\nimport { AppState } from 'src/app/core/store/app.state';\nimport { BaseComponent } from 'src/app/components/base.component';\nimport { ComponentServiceModel } from 'src/app/core/models/component-service.model';\nimport { CreateRoutes } from 'src/app/core/enums/create-routes';\nimport { CreateAdvancedStepsIndexes } from 'src/app/core/enums/create-advanced-steps-indexes';\nimport CustomValidators from 'src/app/core/utils/customValidators';\nimport { MoveToStep } from 'src/app/core/store/action/action.actions';\nimport { ServiceModel } from 'src/app/core/models/service.model';\nimport { Subscription } from 'rxjs';\nimport { TooltipMessages } from 'src/app/core/utils/tooltip.messages';\n\nconst UP_POSITION = 'up';\nconst DOWN_POSITION = 'down';\n\n@Component({\n  selector: 'app-services',\n  templateUrl: './services.component.html',\n  styleUrls: ['./services.component.scss']\n})\nexport class ServicesComponent extends BaseComponent implements OnInit, AfterViewInit {\n  @ViewChildren(CollapseComponent) collapses: CollapseComponent[];\n  private subscription$: Subscription;\n  public services: ComponentServiceModel[] = [];\n  public serviceForm: FormGroup;\n  public headerTooltipMessage = TooltipMessages.ServicesHeaderTooltip;\n  public headerBoldPartTooltipMessage = TooltipMessages.ServicesHeaderBoldPartTooltip;\n  public typeTooltipMessage = TooltipMessages.ServiceTypeTooltip;\n  public endpointTooltipMessage = TooltipMessages.ServiceEndpointTooltip;\n  public continueButtonText: string;\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private store: Store<AppState>) {\n    super();\n  }\n\n  ngOnInit() {\n    this.subscription$ = this.store\n      .pipe(select(state => state))\n      .subscribe(state => {\n        this.services = state.form.services.map(service => new ComponentServiceModel(service, DOWN_POSITION));\n        this.continueButtonText = this.services.length > 0 ? 'Next' : 'Skip';\n      });\n\n    this.subscriptions.push(this.subscription$);\n    this.createForm();\n  }\n\n  ngAfterViewInit() {\n    setTimeout(() => {\n      this.collapses.forEach((collapse: CollapseComponent, index) => {\n        if (index === this.collapses.length - 1) {\n          collapse.toggle();\n        }\n      });\n    });\n  }\n\n  createForm() {\n    this.serviceForm = this.fb.group({\n      type: ['', [Validators.required]],\n      endpoint: ['', [Validators.required]],\n      alias: ['', [Validators.required, CustomValidators.uniqueServiceAlias(this.services.map(s => s.serviceModel))]]\n    });\n  }\n\n  addService() {\n    if (this.serviceForm.invalid) {\n      return;\n    }\n\n    const service = new ServiceModel(\n      this.type.value,\n      this.endpoint.value,\n      this.alias.value\n    );\n\n    this.store.dispatch(new AddService(service));\n    this.createForm();\n  }\n\n  removeService(service: ServiceModel) {\n    this.store.dispatch(new RemoveService(service));\n    this.createForm();\n  }\n\n  toggleService(serviceModel) {\n    const service = this.services.find(s => s.serviceModel === serviceModel);\n    service.iconPosition = service.iconPosition === DOWN_POSITION ? UP_POSITION : DOWN_POSITION;\n  }\n\n  goToNext() {\n    this.store.dispatch(new MoveToStep(CreateAdvancedStepsIndexes.EncryptKeys));\n    this.router.navigate([CreateRoutes.EncryptKeys]);\n  }\n\n  goToPrevious() {\n    this.store.dispatch(new MoveToStep(CreateAdvancedStepsIndexes.AuthenticationKeys));\n    this.router.navigate([CreateRoutes.AuthenticationKeys]);\n  }\n\n  get type () {\n    return this.serviceForm.get('type');\n  }\n\n  get alias () {\n    return this.serviceForm.get('alias');\n  }\n\n  get endpoint () {\n    return this.serviceForm.get('endpoint');\n  }\n}\n","<div class=\"tab-pane fade in active\">\n  <h4 class=\"head text-center\">DID preview</h4>\n  <br/>\n  <div class=\"row\">\n    <div class=\"col-xs-offset-1 col-xs-10 col-sm-offset-2 col-sm-8\">\n      <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"documentSizeExceeded\">\n        <i class=\"fas fa-exclamation-circle mr-2\"></i>\n        You have exceeded the document size limit! Please remove some of your keys or services.\n      </div>\n      <pre><code mwlHighlightJs [source]='didDocument' language=\"json\"></code></pre>\n      <div class=\"row justify-content-between mt-4\">\n        <button class=\"btn-md-blue\" mdbBtn type=\"button\" color=\"primary\" mdbWavesEffect (click)=\"goToPrevious()\"> <span class=\"glyphicon glyphicon-arrow-left mr-3\"></span> Back</button>\n        <button class=\"btn-md-blue\" mdbBtn type=\"button\" color=\"primary\" mdbWavesEffect (click)=\"recordOnChain()\" [disabled]=\"documentSizeExceeded\">{{recordOnChainButtonName}}</button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { DeviceDetectorService } from 'ngx-device-detector';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\n\nimport { ActionType } from 'src/app/core/enums/action-type';\nimport { AppState } from 'src/app/core/store/app.state';\nimport { CreateAdvancedStepsIndexes } from 'src/app/core/enums/create-advanced-steps-indexes';\nimport { CreateBasicStepsIndexes } from 'src/app/core/enums/create-basic-steps-indexes';\nimport { CreateRoutes } from 'src/app/core/enums/create-routes';\nimport { DIDService } from 'src/app/core/services/did.service';\nimport { environment } from 'src/environments/environment';\nimport { MoveToStep } from 'src/app/core/store/action/action.actions';\nimport { SharedRoutes } from 'src/app/core/enums/shared-routes';\nimport { WorkflowService } from 'src/app/core/services/workflow.service';\n\n@Component({\n  selector: 'app-summary',\n  templateUrl: './summary.component.html',\n  styleUrls: ['./summary.component.scss']\n})\nexport class SummaryComponent implements OnInit {\n  public didDocument: string;\n  public documentSizeExceeded: boolean;\n  public recordOnChainButtonName = 'Record on-chain';\n\n  constructor(\n    private deviceService: DeviceDetectorService,\n    private didService: DIDService,\n    private router: Router,\n    private spinner: NgxSpinnerService,\n    private store: Store<AppState>,\n    private workflowService: WorkflowService) {\n  }\n\n  ngOnInit() {\n    if (this.deviceService.isMobile()) {\n      this.recordOnChainButtonName = 'Record';\n    }\n\n    const didDocumentResult = this.didService.generateDocument();\n    this.didDocument = didDocumentResult.document;\n    if (didDocumentResult.size > environment.entrySizeLimit) {\n      this.documentSizeExceeded = true;\n    }\n  }\n\n  recordOnChain() {\n    if (!this.documentSizeExceeded) {\n      this.spinner.show();\n      this.didService\n        .recordOnChain()\n        .subscribe((res: any) => {\n          const selectedAction = this.workflowService.getSelectedAction();\n          if (selectedAction === ActionType.CreateAdvanced) {\n            this.store.dispatch(new MoveToStep(CreateAdvancedStepsIndexes.Final));\n          } else if (selectedAction === ActionType.CreateBasic) {\n            this.store.dispatch(new MoveToStep(CreateBasicStepsIndexes.Final));\n          }\n\n          this.spinner.hide();\n          this.router.navigate([SharedRoutes.Final], { queryParams: { url: res.url } });\n        });\n    }\n  }\n\n  goToPrevious() {\n    const selectedAction = this.workflowService.getSelectedAction();\n    if (selectedAction === ActionType.CreateAdvanced) {\n      this.store.dispatch(new MoveToStep(CreateAdvancedStepsIndexes.EncryptKeys));\n    } else if (selectedAction === ActionType.CreateBasic) {\n      this.store.dispatch(new MoveToStep(CreateBasicStepsIndexes.EncryptKeys));\n    }\n\n    this.router.navigate([CreateRoutes.EncryptKeys]);\n  }\n}\n","export enum SharedRoutes {\r\n  Action = 'action',\r\n  Final = 'final'\r\n}\r\n","import { KeyModel } from './key.model';\r\n\r\nexport class ComponentKeyModel {\r\n  constructor(\r\n    public keyModel: KeyModel,\r\n    public iconPosition: string) {\r\n  }\r\n}\r\n","import { ServiceModel } from './service.model';\r\n\r\nexport class ComponentServiceModel {\r\n  constructor(\r\n    public serviceModel: ServiceModel,\r\n    public iconPosition: string) {\r\n  }\r\n}\r\n","export class ServiceModel {\r\n  constructor(\r\n    public type: string,\r\n    public endpoint: string,\r\n    public alias: string) {}\r\n}\r\n","import { AbstractControl, FormGroup, ValidatorFn } from '@angular/forms';\r\nimport { KeyModel } from '../models/key.model';\r\nimport { ServiceModel } from '../models/service.model';\r\n\r\nexport default class CustomValidators {\r\n  static passwordsDoMatch(createFormGroup: FormGroup) {\r\n    const password = createFormGroup.controls.password.value;\r\n    const repeatPassword = createFormGroup.controls.confirmPassword.value;\r\n\r\n    if (!repeatPassword) {\r\n      return null;\r\n    }\r\n\r\n    if (repeatPassword !== password) {\r\n      return {\r\n        passwordsMismatch: true\r\n      };\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  static uniqueKeyAlias(publicKeys: KeyModel[], authenticationKeys: KeyModel[]): ValidatorFn {\r\n    return (control: AbstractControl): { [key: string]: any } | null => {\r\n      if (control.value !== null) {\r\n        if (!publicKeys.find(k => k.alias === control.value)\r\n          && !authenticationKeys.find(k => k.alias === control.value)) {\r\n          return null;\r\n        }\r\n\r\n        return {taken: true};\r\n      }\r\n\r\n      return null;\r\n    };\r\n  }\r\n\r\n  static uniqueServiceAlias(services: ServiceModel[]): ValidatorFn {\r\n    return (control: AbstractControl): { [key: string]: any } | null => {\r\n      if (control.value !== null) {\r\n        if (services.find(s => s.alias === control.value)) {\r\n          return {taken: true};\r\n        }\r\n      }\r\n\r\n      return null;\r\n    };\r\n  }\r\n}\r\n","export class TooltipMessages {\r\npublic static SignatureTypeTooltip = 'Both signature types allow you to sign messages ' +\r\n  'and differ only in the mathematics underpinning them. Ed25519 is the more modern signature type and has ' +\r\n  'a number of technical advantages over ECDSA, so unless you have a good reason to choose ECDSA, we strongly recommend ' +\r\n  'that you stick with the default.';\r\n\r\n  public static ControllerTooltip = 'The controller is the entity that will be making the signatures. ' +\r\n  'This is usually the DID itself, but in case the DID is for a child, it can be the DID of the parent; ' +\r\n  'if it is a document, it can be the DID of the company owning the document, etc. By default the controller is ' +\r\n  'set to the DID you are currently creating. If the controller is a different DID, you should input the relevant DID instead.';\r\n\r\n  public static AliasTooltip = 'A human-readable nickname for the key you are creating. ' +\r\n  'It can help differentiate between different keys more easily if you are creating many.';\r\n\r\n  public static AuthenticationDropdownTooltip = 'Generate keys that will be used specifically for authentication purposes. ' +\r\n  'You can re-use keys created in the previous step.';\r\n\r\n  public static ServicesHeaderTooltip = 'Register services used by the DID. These can be authentication providers, ' +\r\n  'messaging hubs, credential repositories for verifiable claims, etc.';\r\n\r\n  public static ServicesHeaderBoldPartTooltip = 'DO NOT put links to personally identifiable information ' +\r\n  '(such as social media profiles, email addresses, phone numbers, etc.)';\r\n\r\n  public static ServiceTypeTooltip = 'Choose a human-readable description of the type of service, e.g. KYCProvider, ' +\r\n  'CredentialRepositoryService, MessagingHub, etc.';\r\n\r\n  public static ServiceEndpointTooltip = 'Specify the URL for the service, e.g. https://example.com/KYCProvider';\r\n\r\n  public static EncryptHeaderTooltipAdvancedMode = 'Choose a strong password to encrypt the private keys(s) of the DID.';\r\n\r\n  public static EncryptHeaderBoldPartTooltipAdvancedMode = 'Make sure you store the password in a safe location: ' +\r\n  'there is no password recovery if you lose your password and you will be unable to sign messages with your DID keys, if you lose it!';\r\n\r\n  public static EncryptHeaderTooltipBasicMode = 'Choose a strong password to encrypt the private key of the DID.';\r\n\r\n  public static EncryptHeaderBoldPartTooltipBasicMode = 'Make sure you store the password in a safe location: ' +\r\n  'there is no password recovery if you lose your password and you will be unable to sign messages with your DID key, if you lose it!';\r\n}\r\n"],"sourceRoot":""}